// Add this to your dependencies in pubspec.yaml:
// http: ^0.13.3

import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: WallpaperChanger(),
    );
  }
}

class WallpaperChanger extends StatefulWidget {
  @override
  _WallpaperChangerState createState() => _WallpaperChangerState();
}

class _WallpaperChangerState extends State<WallpaperChanger> {
  List<String> _wallpapers = [];

  @override
  void initState() {
    super.initState();
    fetchWallpapers(); // Fetch wallpapers when the app starts
  }

  Future<void> fetchWallpapers() async {
    final String apiUrl = 'https://api.unsplash.com/photos/random';
    final String apiKey = 'YOUR_UNSPLASH_API_KEY';
    final String query = 'anime,marvel'; // Search query for anime and Marvel wallpapers

    final response = await http.get(Uri.parse('$apiUrl?query=$query&client_id=$apiKey'));

    if (response.statusCode == 200) {
      final List<dynamic> data = json.decode(response.body);
      setState(() {
        _wallpapers = data.map((wallpaper) => wallpaper['urls']['regular']).toList();
      });
    } else {
      throw Exception('Failed to fetch wallpapers');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Wallpaper Changer'),
      ),
      body: GridView.builder(
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 2,
          crossAxisSpacing: 4.0,
          mainAxisSpacing: 4.0,
        ),
        itemCount: _wallpapers.length,
        itemBuilder: (context, index) {
          return Image.network(
            _wallpapers[index],
            fit: BoxFit.cover,
          );
        },
      ),
    );
  }
}
